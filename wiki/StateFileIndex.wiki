#summary A list and description of all options provided by RAIL_State files.
#labels Phase-Deploy

<wiki:toc />

= Introduction =

The Rampage AI Lite state-file contains all configuration relating to behavior of the AI. In addition, it also contains information regarding the current-state of the AI (for example, the ID number of the homunculus/mercenary).

The state-file options are verified as they are used, so it is impossible to cause a Lua error when changing options. Further, corrected values are saved back into the state-file.

Because of the way the state-file is saved, it is impractical to maintain user-comments or values outside of the rail_state table. The order of options may also change. Please avoid storing important information inside of the RAIL state file.

= Finding Your State-File =

By default, your state-file is located in the base Ragnarok Online directory. (See [http://code.google.com/p/ro-rail/wiki/FirstTimeInstall#Before_You_Begin:_Locate_your_Ragnarok_Online_directory Before You Begin: Locate your Ragnarok Online directory] for more information on finding your Ragnarok Online directory.) The [http://code.google.com/p/ro-rail/wiki/ConfigLuaFile#RAIL._StateFile RAIL.StateFile] option in the Config.lua file will specify the filename.

With default filename, the image below shows the state-file for a Rampage AI Lite-controlled mercenary. Notice that the default of `"RAIL_State.{2}.lua"` was automatically expanded to `"RAIL_State.merc.lua"` for the mercenary AI.

http://ro-rail.googlecode.com/svn/wiki/img/find-state-file.png

Once you've located the state-file, it is safe to open it in Microsoft Notepad or any other text-editor.

_Note: Vista users will have problems editing the state-file if it is inside the _Program Files_ directory. Please make sure your copy of Ragnarok Online is installed outside of this folder._

= An Important Note =

All options shown on this page will appear in the state-file similar to the following:
{{{
rail_state["Aggressive"] = false
}}}
In this example, the option is [StateFileIndex#Aggressive Aggressive], and the option is set to `false`.

The names of the options in the state-file (eg, "[StateFileIndex#Aggressive Aggressive]") are all case-sensitive. In other words, the option "aggRESsive" will not have any relation to the option "[StateFileIndex#Aggressive Aggressive]". When adding new options, be careful to note that the capitalization matches what is shown on this page.

= Options Index =

== Base Options Table ==

=== !AcquireWhileLocked ===

*Type:* Boolean

*Default:* `false`

When set to `true`, !AcquireWhileLocked will cause the AI to actively seek targets that are outside of its attack range, even while attacking. Because this causes melee-range mercenaries/homunculi to run away from their attack target, it is recommended to enable only for long-range mercenaries.

*See also:* [StateFileIndex#AttackWhileChasing AttackWhileChasing]

=== !ActorOptions ===

_Please refer to [StateFileIndex#ActorOptions_Sub-table ActorOptions Sub-table]._

=== Aggressive ===

*Type:* Boolean

*Default:* `false`

When set to `true`, Aggressive will cause the AI to actively search for new targets.

_Note: This option can be changed from inside the Ragnarok Online client by pressing `<ALT+T>` for a homunculus, or `<CTRL+T>` for a mercenary. Changes made by this key-press will be saved._

=== !AssistOptions ===

_Please refer to [StateFileIndex#AssistOptions_Sub-table AssistOptions Sub-table]._

=== ~~!AssistOther~~ ===

_This option was removed in [http://code.google.com/p/ro-rail/source/detail?r=164 revision 164]. Please refer to [StateFileIndex#AssistOptions_Sub-table AssistOptions Sub-table]._

<wiki:comment>
*Type:* Boolean

*Default:* `false`

!AssistOther operates like !AssistOwner, but causes the AI to assist its counterpart. For example, if both homunculus and mercenary are active, !AssistOther in the mercenary state-file would cause a passive mercenary to target enemies that the homunculus is attacking.

This option takes precedence over [StateFileIndex#Aggressive Aggressive] and [StateFileIndex#DefendOptions_Sub-table DefendOptions Sub-table] options.

*See also:* [StateFileIndex#AssistOwner AssistOwner]
</wiki:comment>

=== ~~!AssistOwner~~ ===

_This option was removed in [http://code.google.com/p/ro-rail/source/detail?r=164 revision 164]. Please refer to [StateFileIndex#AssistOptions_Sub-table AssistOptions Sub-table]._

<wiki:comment>
*Type:* Boolean

*Default:* `false`

When set to `true`, !AssistOwner will cause the AI to select targets that the owner is hostile against. This includes attacks, skill charge-up, and skill casts against enemy targets.

This option takes precedence over all others, including [StateFileIndex#Aggressive Aggressive], [StateFileIndex#AssistOther AssistOther], and [StateFileIndex#DefendOptions_Sub-table DefendOptions Sub-table] options.

*See also:* [StateFileIndex#AssistOther AssistOther]
</wiki:comment>

=== !AttackWhileChasing ===

*Type:* Boolean

*Default:* `false`

_Not written yet. Check back soon!_

=== !DebugFile ===

*Type:* String

*Default:* `"RAIL_Log.{2}.lua"`

The !DebugFile option specifies where RAIL's logs should be output to. It allows pattern expansion in a similar manner as the [ConfigLuaFile#RAIL._StateFile Config.lua StateFile option]. Multiple instances of RAIL can simultaneously use the same log file without problem.

_Note: If the [ConfigLuaFile#RAIL.UseTraceAI Config.lua UseTraceAI option] is set to `true`, then this option will have no effect._

*See also:* [StateFileIndex#DebugLevel DebugLevel]; [StateFileIndex#ProfileMark ProfileMark]

=== !DebugLevel ===

*Type:* Number

*Default:* `50`

*Maximum Value:* `99`

This option sets the verbosity of RAIL logging, with higher numbers being more verbose. Unless troubleshooting or learning about RAIL, this option should be ignored.

_Note: Debug levels for various log messages can be found at the top of [http://ro-rail.googlecode.com/svn/trunk/Debug.lua]._

*See also:* [StateFileIndex#DebugFile DebugFile]; [StateFileIndex#ProfileMark ProfileMark]

=== !DefendOptions ===

_Please refer to [StateFileIndex#DefendOptions_Sub-table DefendOptions Sub-table]._

=== !DisableChase ===

*Type:* Boolean

*Default:* `false`

When !DisableChase is set to `true`, Rampage AI Lite will not attempt to move toward enemies. This setting removes offensive chase-targeting, and brings movement to a bare minimum. Take note that unlike restricting [StateFileIndex#MaxDistance MaxDistance], this still allows manually-controlled movement within the [StateFileIndex#MaxDistance MaxDistance] area.

_Note: Manually moving is possible on the homunculus with _`<ALT+Right Click>`_, and on the mercenary with _`<ALT+Left Click>`_._

*See also:* [StateFileIndex#MaxDistance MaxDistance]

=== !FollowDistance ===

*Type:* Number

*Default:* `4`

*Minimum Value:* `0`

*Maximum Value:* _The value of [StateFileIndex#MaxDistance MaxDistance]_

Once Rampage AI Lite begins following the owner (your character) due to [StateFileIndex#MaxDistance MaxDistance], it will only stop under two conditions:
  # Your character stops moving; or
  # Rampage AI Lite manages to get close enough to its owner.
!FollowDistance indicates how close RAIL needs to be before it decides it is "close enough" and resumes normal operation.

*See also:* [StateFileIndex#MaxDistance MaxDistance]

=== !InterceptAlgorithm ===

*Type:* String

*Default:* `"normal"`

!InterceptAlgorithm specifies the method that RAIL should use to chase a moving target. There are four accepted values for this option:
  * `"none"` makes no future estimation, and moves toward the current location.
  * `"sloppy"` estimates where the target will be after 500ms, and moves toward that location.
  * `"normal"` makes a rough estimation where the target will be by the time the AI reaches it. This is recommended for regular use.
  * ~~`"advanced"`~~ _This option is not implemented yet._

_Note: This algorithm is also used when chasing after the owner to stay on screen._

=== !MaxDistance ===

*Type:* Number

*Default:* `13`

*Minimum Value:* `0`

*Maximum Value:* `14`

This option specifies the maximum distance (in tiles) that Rampage AI Lite should stray. RAIL will still move to attack enemies outside of this area, provided it has a long enough  attack range (eg, archer mercenaries).

If Rampage AI Lite detects that your character begins movement that will place it outside of this range, it will spend all resources in attempt to stay within this number of tiles.

*See also:* [StateFileIndex#FollowDistance FollowDistance]; [StateFileIndex#DisableChase DisableChase]

=== MobIDFile ===

*Type:* String

*Default:* `"./AI/USER_AI/Mob_ID.lua"`

MobIDFile specifies the file to communicate monster types with. It is recommended to leave this setting at default, except under special circumstances.

*Warning:* MobIDFile does _not_ support `{n}` pattern expansion. (For more information on pattern expansion, refer to the [ConfigLuaFile#RAIL._StateFile Config.lua StateFile option].)

_Note: The default setting is compatible with Azzy AI's Mob ID feature._

*See also:* [StateFileIndex#MobIDMode MobIDMode]

=== MobIDMode ===

*Type:* String

*Default:* `"automatic"`

MobIDMode is the main switch for Rampage AI Lite's Mob-ID communication support. When active, this feature allows Mercenary-type AIs to determine monster type with help from a Homunculus-type AI. The accepted values vary by the type of AI.

For AIs that are able to distinguish monster-type (eg, Homunculus):
  * `"disabled"` will not use Mob-ID communication. This will prevent Rampage AI Lite from creating or changing the file specified in [StateFileIndex#MobIDFile MobIDFile].
  * `"automatic"` will automatically enable use of Mob-ID communication when Rampage AI Lite is paired (eg, Homunculus and Mercenary are both active simultaneously). This is the recommended value for standard use.
  * `"overwrite"` will recreate the [StateFileIndex#MobIDFile MobIDFile] each time Rampage AI Lite is loaded. Changing maps will clear all previous ID-to-type entries.
  * `"update"` will only update the [StateFileIndex#MobIDFile MobIDFile] as new monsters (or changed-types) are found. Old values will remain unchanged. This is recommended only when generating a MobID file while teleporting within the same map.

For AIs that are _not_ able to distinguish monster-type (eg, Mercenary):
  * `"disabled"` never loads the [StateFileIndex#MobIDFile MobIDFile]. Rampage AI Lite will be unable to distinguish monster types.
  * `"automatic"` will automatically enable use of Mob-ID communication when Rampage AI Lite is paired (eg, Homunculus and Mercenary are both active simultaneously). This is the recommended value for standard use.
  * `"once"` will only read the [StateFileIndex#MobIDFile MobIDFile] when Rampage AI Lite starts. This provides compatibility for pre-generated tables (for example, generated by `"update"` or `"overwrite"` above).
  * `"active"` rereads the [StateFileIndex#MobIDFile MobIDFile] whenever Rampage AI Lite encounters an actor that is not in the loaded Mob-ID table. This should not be used unless the [StateFileIndex#MobIDFile MobIDFile] is being actively updated. (_Note: This mode is unable to detect monster-type changes._)

*See also:* [StateFileIndex#MobIDFile MobIDFile]

=== !ProfileMark ===

*Type:* Number

*Default:* `20000`

*Minimum Value:* `2000`

The !ProfileMark option specifies how often Rampage AI Lite should log profiling information. This information includes average cycle time, memory usage, etc. If you are unsure what this means, it is safe to ignore this option.

*See also:* [StateFileIndex#DebugFile DebugFile]; [StateFileIndex#DebugLevel DebugLevel]

=== !SkillOptions ===

_Please refer to [StateFileIndex#SkillOptions_Sub-table SkillOptions Sub-table]._

=== !TempFriendRange ===

*Type:* Number

*Default:* `-1`

*Minimum Value:* `-1`

*Maximum Value:* `5`

!TempFriendRange sets the distance at which players will be temporarily considered "friends" for the purpose of defending, assisting, and disabling kill-steal protection. Players are considered friends only for the duration that they are within this range, and no permanent record is kept.

This range is counted by tiles from your character, from `0` to `5`. A value of `-1` indicates that no players should ever be counted as temporary friends.

*See also:* [StateFileIndex#AssistOptions_Sub-table AssistOptions Sub-table]; [StateFileIndex#DefendOptions_Sub-table DefendOptions Sub-table]

=== update ===

*Type:* Boolean

*Default:* `false`

The update option is a hidden option that causes a running RAIL instance to reload its state-file configuration. To change state-file options without resetting the AI completely, set this option to `true`.

_Note: Because this is a hidden option, it will only appear in the state-file after being manually added. If you wish to enable it, please manually type it into the bottom of the state-file. Afterward, you may simply change `false` to `true`._

*Warning:* Please notice that the first letter is not capitalized. This option must be entered completely lowercase to take effect.

=== ~~UseMobID~~ ===

_This option was removed in [http://code.google.com/p/ro-rail/source/detail?r=158 revision 158]. Please refer to [StateFileIndex#MobIDMode MobIDMode]._

<wiki:comment>
*Type:* Boolean

*Default:* `false`

When UseMobID is set to `true`, Rampage AI Lite will begin to use the [StateFileIndex#MobIDFile MobID File] to communicate monster types. 

For homunculi, this means that Rampage AI Lite will write a mapping of IDs into the [StateFileIndex#MobIDFile MobID File]. This file will only be written when a new actor ID is encountered, or when an actor changes type ID.

For mercenaries, this means that Rampage AI Lite will load a table from the [StateFileIndex#MobIDFile MobID File] and use it to distinguish actor type IDs. When used properly, this enables mercenaries to distinguish different types of monsters, players, etc. This file is only loaded when a new actor ID is encountered.

*Warning:* This ID-mapping table is specific for each Ragnarok Online map (eg, moc_fild01). An outdated MobID file, or one generated for a different Ragnarok map will cause unexpected behavior!

_Note: When both homunculus and mercenary are used together (with UseMobID enabled for both), the MobID file will always be proper and usable._

*See also:* [StateFileIndex#MobIDFile MobIDFile]; [StateFileIndex#MobIDMode MobIDMode]
</wiki:comment>

== !ActorOptions Sub-table ==

_Not written yet. Check back soon!_

== !AssistOptions Sub-table ==

The !AssistOptions Sub-table contains three settings related to the way Rampage AI Lite assists other players. Each settings is identical and works to classify the player into one of three groups:
  * `"Owner"` refers _only_ to Rampage AI Lite's owner; also known as your character.
  * `"Other"` refers _only_ to a paired homunculus or mercenary. For example, an alchemist's homunculus would refer to the same alchemist's mercenary as `"Other"`, and vice versa.
    * _Note: This only takes effect when both homunculus and mercenary are running Rampage AI Lite._
  * `"Friend"` refers to any player that is either:
    * explicitly marked as a friend, or
    * is within a certain number of tiles from your character (decided by [StateFileIndex#TempFriendRange TempFriendRange]).

For clarity and simplicity, the following settings are described in terms of the above `"Owner"` category; however, each may be used for any category setting. The possible settings include: 
  * `"assist"` indicates that Rampage AI Lite should prioritize attacking your target. If multiple categories are set to `"assist"`, Rampage AI Lite will select targets in this order: `"Owner"`, `"Other"`, and `"Friend"`. In other words, the `"Owner"`'s target will take precedence over all others.
  * `"avoid"` causes Rampage AI Lite to attack your target _only_ when no other enemies are available. If multiple categories are set to `"avoid"`, Rampage AI Lite will group the targets together. In this way, it will avoid all `"avoid"`ed targets together, or none at all.
  * `"indifferent"` has no effect on the normal targeting routines of Rampage AI Lite. This option is default.

Both `"assist"` and `"avoid"` take precedence over the [StateFileIndex#ActorOptions_Sub-table ActorOptions Sub-table]'s [UnwrittenThing Priority] option and all [StateFileIndex#DefendOptions_Sub-table DefendOptions Sub-table] options.

As an example, to optimize killing with a high-level pair of homunculus and mercenary:
Set the following in *both* `homu` and `merc` state-files:
{{{
rail_state["AssistOptions"]["Other"] = "avoid"
}}}

*Warning:* Setting *both* `homu` and `merc` state-file settings of `"Other"` to `"assist"` (as opposed to the above example of `"avoid"`) may result in low-priority targeting or other undesirable behavior.

== !DefendOptions Sub-table ==

_Not written yet. Check back soon!_

== !SkillOptions Sub-table ==

_Not written yet. Check back soon!_